## Load packages
rm(list=ls())
library(tidyverse)
library(stats4)
library(maxLik)
library(alr4)
setwd("C:/Users/alienware/Desktop/Deeqa_EEE/Empirical methods for policy evaluation/Part 2/Takehome 2-20211227")
## Load data
# chile <- read.delim(file = "casen_chile.txt", sep = ",", header = FALSE, col.names = c("unemp_duration","wage","status"))
chile <- read.delim(file = "chile.txt", sep = ",", header = FALSE, col.names = c("unemp_duration","wage","status"))
## define parameters
p <- 0.05
N <- nrow(chile)
N_u <- nrow(chile[chile$status == 1,])
N_f <- nrow(chile[chile$status == 2,])
N_i <- nrow(chile[chile$status == 3,])
# Take the estimate of the reservation wage
w_star <- min(chile$wage[chile$status != 1])
G_tilde <- function(mu, sigma, wage){
return( 1 - plnorm(wage, meanlog = mu, sdlog = sigma, lower.tail = TRUE, log.p = FALSE) )
}
lambda <- function(mu_i,sigma_i,mu_f,sigma_f){
return( ( N_u/(sum(chile$unemp_duration)) )*( 1/(G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) + G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)) ) )
}
eta <- function(lambda,mu_i,sigma_i,mu_f,sigma_f){
return( lambda*( (N/N_i)*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) - G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) ) )
}
eta2 <- function(lambda,mu_i,sigma_i,mu_f,sigma_f){
return( lambda*( (N/N_f)*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) ) )
}
LogLikelihood <- function(parameters){
print(parameters)
# Assign parameters
mu_i <- parameters[1]
sigma_i <- parameters[2]
mu_f <- parameters[3]
sigma_f <- parameters[4]
# get values for lambda and eta (concentrated out)
lambda_value <- lambda(mu_i = mu_i, sigma_i = sigma_i, mu_f = mu_f, sigma_f  = sigma_f)
eta_value <- eta(lambda = lambda_value, mu_i = mu_i, sigma_i = sigma_i, mu_f = mu_f, sigma_f = sigma_f)
# Specify LL
LL <- (
-N*log(1 + lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)*(1/eta_value) +
lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)*(1/eta_value)
) +
# contribution of formally employed
sum(log(dlnorm(x = chile$wage[chile$status == 2], meanlog = mu_f, sdlog = sigma_f))) +
# contribution of informally employed
sum(log(dlnorm(x = chile$wage[chile$status == 3], meanlog = mu_i, sdlog = sigma_i))) +
#
N_f*log(lambda_value/eta_value) +
N_i*log(lambda_value/eta_value) +
N_u*log(lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)) -
#
(lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))*sum(chile$unemp_duration)
)
if(sigma_i > 0 & sigma_f > 0 & lambda_value > 0 & eta_value > 0){
return(ifelse(LL == -Inf, 10^100, -LL))
} else{
return(10^100)
}
}
LogLikelihood2 <- function(parameters){
print(parameters)
# Assign parameters
mu_i <- parameters[1]
sigma_i <- parameters[2]
mu_f <- parameters[3]
sigma_f <- parameters[4]
lambda <- parameters[5]
eta    <- parameters[6]
#
# get values for lambda and eta
N <- N_u+N_i+N_f
# Specify LL
LL <- (
-N*log(1 + lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)*(1/eta) +
lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)*(1/eta)
)
#
+  N_f*log(lambda/eta)
+  N_i*log(lambda/eta)
+  N_u*log(lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))
#
- (lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))*sum(chile$unemp_duration)
# formally employed
+ sum(log(dlnorm(x = chile$wage[chile$status == 2], meanlog = mu_f, sdlog = sigma_f)))
# informally employed
+ sum(log(dlnorm(x = chile$wage[chile$status == 3], meanlog = mu_i, sdlog = sigma_i)))
)
if(sigma_i > 0 & sigma_f > 0 & lambda > 0 & eta > 0){
return(ifelse(LL == -Inf, 10^100, -LL))
} else{
return(10^100)
}
}
initial_parameters2 <- rep(1.3,6)
optimal_parameters2 <- optim(par = initial_parameters2,
fn = LogLikelihood2,method = "BFGS",
control = list(maxit = 10000, reltol = 1e-12))
Param <- optimal_parameters2$par
Param
LogLikelihood2(parameters = Param)
Param
G_tilde(mu_i,sigma_i,w_star)
mu_i <- Param[1]
sigma_i<-Param[2]
mu_f<-Param[3]
sigma_f<-Param[4]
LogLikelihood2(parameters = Param)
G_tilde(mu_i,sigma_i,w_star)
#############Environment Setting################
################################################
# Load packages
rm(list=ls())
library(tidyverse)
library(stats4)
library(maxLik)
library(alr4)
library(bbmle)
library(xtable)
setwd("C:/Users/\alienware/Desktop/Deeqa_EEE/Empirical methods for policy evaluation/Part 2/Takehome 2-20211227")
# setwd("C:/Users/\alienware/Desktop/Deeqa_EEE/Empirical methods for policy evaluation/Part 2/Takehome 2-20211227")
setwd("C:/Users/33678/Desktop/Deeqa_EEE/Empirical methods for policy evaluation/Part 2/Takehome 2-20211227")
source("FunctionLib2.R")
load("test.RData")
LLK_maxLik <- LLK_maxLik_chile
count <- 1
temp_index <- which.min(LLK_maxLik[,ncol(LLK_maxLik)])
temp_param <- LLK_maxLik[temp_index,1:num_intervaldim]
temp_std   <- LLK_maxLik[temp_index,(1+num_intervaldim):(2*num_intervaldim)]
temp_prb   <- LLK_maxLik[temp_index,(1+3*num_intervaldim):(4*num_intervaldim)]
FOC_Lambda[count] <- lambda(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
load("test.RData")
LLK_maxLik <- LLK_maxLik_chile
count <- 1
dataset <- data %>% filter(country == count)
temp_index <- which.min(LLK_maxLik[,ncol(LLK_maxLik)])
temp_param <- LLK_maxLik[temp_index,1:num_intervaldim]
temp_std   <- LLK_maxLik[temp_index,(1+num_intervaldim):(2*num_intervaldim)]
temp_prb   <- LLK_maxLik[temp_index,(1+3*num_intervaldim):(4*num_intervaldim)]
FOC_Lambda[count] <- lambda(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta[count]  <- eta(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta2[count]   <- eta2(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Ratio[count] <- ratioGandN(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
sample_wage_Gi <- rlnorm(n = 100000, meanlog = temp_param[1], sdlog = temp_param[2])
wageHwstar_Gi <- mean(sample_wage_Gi[sample_wage_Gi > w_star[count]])
sample_wage_Gf <- rlnorm(n = 100000, meanlog = temp_param[3], sdlog = temp_param[4])
wageHwstar_Gf <- mean(sample_wage_Gf[sample_wage_Gf > w_star[count]])
sample_wage_Gi <- rlnorm(n = 100000, meanlog = temp_param[1], sdlog = temp_param[2])
wageHwstar_Gi <- mean(sample_wage_Gi[sample_wage_Gi > w_star[count]])
sample_wage_Gf <- rlnorm(n = 100000, meanlog = temp_param[3], sdlog = temp_param[4])
wageHwstar_Gf <- mean(sample_wage_Gf[sample_wage_Gf > w_star[count]])
b[count] <- w_star[count] - (temp_param[5]/(rho + temp_param[6]))*(
wageHwstar_Gi - w_star[count]*G_tilde(mu = temp_param[1], sigma = temp_param[2], dataset = dataset) +
wageHwstar_Gf - w_star[count]*G_tilde(mu = temp_param[3], sigma = temp_param[4], dataset = dataset))
for (t in 1:num_intervaldim){
Table_Coefficient[2*t-1,count] <- sprintf("%.4f",temp_param[t])
if (temp_prb[t]<0.01){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{***}")
}else if (temp_prb[t]<0.05){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{**}")
}else if (temp_prb[t]<0.1){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{*}")
}else{
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")")
}
}
Table_Coefficient[13,count] <- b[count]
Table_Coefficient[13,count] <-sprintf("%.4f", b[count])
Table_Coefficient[14,count] <- sprintf("%.4f", w_star[count])
Table_Population[1,count] <- paste0(Nu[count])
Table_Population[3,count] <- Nei[count]
Table_Population[5,count] <- Nef[count]
Table_Population[7,count] <- N[count]
Table_Population[2,count] <- paste0(sprintf("%.2f",Nu[count]/N[count]*100))
Table_Population[4,count] <- paste0(sprintf("%.2f",Nei[count]/N[count]*100))
Table_Population[6,count] <- paste0(sprintf("%.2f",Nef[count]/N[count]*100))
print(xtable(Table_Coefficient, type = "latex"), file = "Table_Coefficient.tex")
print(xtable(Table_Population, type = "latex"), file = "Table_Population.tex")
LLK_maxLik <- LLK_maxLik_argentina
count <- 2
# load("test.RData")
# LLK_maxLik <- LLK_maxLik_chile
# count <- 1
LLK_maxLik <- LLK_maxLik_argentina
count <- 2
#
# LLK_maxLik <- LLK_maxLik_colombia
# count <- 3
#
# LLK_maxLik <- LLK_maxLik_mexico
# count <- 4
dataset <- data %>% filter(country == count)
temp_index <- which.min(LLK_maxLik[,ncol(LLK_maxLik)])
temp_param <- LLK_maxLik[temp_index,1:num_intervaldim]
temp_std   <- LLK_maxLik[temp_index,(1+num_intervaldim):(2*num_intervaldim)]
temp_prb   <- LLK_maxLik[temp_index,(1+3*num_intervaldim):(4*num_intervaldim)]
FOC_Lambda[count] <- lambda(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta[count]  <- eta(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta2[count]   <- eta2(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Ratio[count] <- ratioGandN(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
## Estimate b
sample_wage_Gi <- rlnorm(n = 100000, meanlog = temp_param[1], sdlog = temp_param[2])
wageHwstar_Gi <- mean(sample_wage_Gi[sample_wage_Gi > w_star[count]])
sample_wage_Gf <- rlnorm(n = 100000, meanlog = temp_param[3], sdlog = temp_param[4])
wageHwstar_Gf <- mean(sample_wage_Gf[sample_wage_Gf > w_star[count]])
b[count] <- w_star[count] - (temp_param[5]/(rho + temp_param[6]))*(
wageHwstar_Gi - w_star[count]*G_tilde(mu = temp_param[1], sigma = temp_param[2], dataset = dataset) +
wageHwstar_Gf - w_star[count]*G_tilde(mu = temp_param[3], sigma = temp_param[4], dataset = dataset))
# table part
for (t in 1:num_intervaldim){
Table_Coefficient[2*t-1,count] <- sprintf("%.4f",temp_param[t])
if (temp_prb[t]<0.01){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{***}")
}else if (temp_prb[t]<0.05){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{**}")
}else if (temp_prb[t]<0.1){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{*}")
}else{
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")")
}
}
Table_Coefficient[13,count] <-sprintf("%.4f", b[count])
Table_Coefficient[14,count] <- sprintf("%.4f", w_star[count])
Table_Population[1,count] <- paste0(Nu[count])
Table_Population[3,count] <- Nei[count]
Table_Population[5,count] <- Nef[count]
Table_Population[7,count] <- N[count]
Table_Population[2,count] <- paste0(sprintf("%.2f",Nu[count]/N[count]*100))
Table_Population[4,count] <- paste0(sprintf("%.2f",Nei[count]/N[count]*100))
Table_Population[6,count] <- paste0(sprintf("%.2f",Nef[count]/N[count]*100))
print(xtable(Table_Coefficient, type = "latex"), file = "Table_Coefficient.tex")
print(xtable(Table_Population, type = "latex"), file = "Table_Population.tex")
# load("test.RData")
# LLK_maxLik <- LLK_maxLik_chile
# count <- 1
# LLK_maxLik <- LLK_maxLik_argentina
# count <- 2
#
LLK_maxLik <- LLK_maxLik_colombia
count <- 3
#
# LLK_maxLik <- LLK_maxLik_mexico
# count <- 4
dataset <- data %>% filter(country == count)
temp_index <- which.min(LLK_maxLik[,ncol(LLK_maxLik)])
temp_param <- LLK_maxLik[temp_index,1:num_intervaldim]
temp_std   <- LLK_maxLik[temp_index,(1+num_intervaldim):(2*num_intervaldim)]
temp_prb   <- LLK_maxLik[temp_index,(1+3*num_intervaldim):(4*num_intervaldim)]
FOC_Lambda[count] <- lambda(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta[count]  <- eta(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta2[count]   <- eta2(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Ratio[count] <- ratioGandN(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
## Estimate b
sample_wage_Gi <- rlnorm(n = 100000, meanlog = temp_param[1], sdlog = temp_param[2])
wageHwstar_Gi <- mean(sample_wage_Gi[sample_wage_Gi > w_star[count]])
sample_wage_Gf <- rlnorm(n = 100000, meanlog = temp_param[3], sdlog = temp_param[4])
wageHwstar_Gf <- mean(sample_wage_Gf[sample_wage_Gf > w_star[count]])
b[count] <- w_star[count] - (temp_param[5]/(rho + temp_param[6]))*(
wageHwstar_Gi - w_star[count]*G_tilde(mu = temp_param[1], sigma = temp_param[2], dataset = dataset) +
wageHwstar_Gf - w_star[count]*G_tilde(mu = temp_param[3], sigma = temp_param[4], dataset = dataset))
# table part
for (t in 1:num_intervaldim){
Table_Coefficient[2*t-1,count] <- sprintf("%.4f",temp_param[t])
if (temp_prb[t]<0.01){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{***}")
}else if (temp_prb[t]<0.05){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{**}")
}else if (temp_prb[t]<0.1){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{*}")
}else{
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")")
}
}
Table_Coefficient[13,count] <-sprintf("%.4f", b[count])
Table_Coefficient[14,count] <- sprintf("%.4f", w_star[count])
Table_Population[1,count] <- paste0(Nu[count])
Table_Population[3,count] <- Nei[count]
Table_Population[5,count] <- Nef[count]
Table_Population[7,count] <- N[count]
Table_Population[2,count] <- paste0(sprintf("%.2f",Nu[count]/N[count]*100))
Table_Population[4,count] <- paste0(sprintf("%.2f",Nei[count]/N[count]*100))
Table_Population[6,count] <- paste0(sprintf("%.2f",Nef[count]/N[count]*100))
print(xtable(Table_Coefficient, type = "latex"), file = "Table_Coefficient.tex")
print(xtable(Table_Population, type = "latex"), file = "Table_Population.tex")
# load("test.RData")
# LLK_maxLik <- LLK_maxLik_chile
# count <- 1
# LLK_maxLik <- LLK_maxLik_argentina
# count <- 2
#
# LLK_maxLik <- LLK_maxLik_colombia
# count <- 3
#
LLK_maxLik <- LLK_maxLik_mexico
count <- 4
dataset <- data %>% filter(country == count)
temp_index <- which.min(LLK_maxLik[,ncol(LLK_maxLik)])
temp_param <- LLK_maxLik[temp_index,1:num_intervaldim]
temp_std   <- LLK_maxLik[temp_index,(1+num_intervaldim):(2*num_intervaldim)]
temp_prb   <- LLK_maxLik[temp_index,(1+3*num_intervaldim):(4*num_intervaldim)]
FOC_Lambda[count] <- lambda(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta[count]  <- eta(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Eta2[count]   <- eta2(lambda = temp_param[5],mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
FOC_Ratio[count] <- ratioGandN(mu_i = temp_param[1],sigma_i = temp_param[2],mu_f = temp_param[3],sigma_f = temp_param[4],dataset=dataset,count=count,Nu = Nu,Nei=Nei,Nef=Nef)
## Estimate b
sample_wage_Gi <- rlnorm(n = 100000, meanlog = temp_param[1], sdlog = temp_param[2])
wageHwstar_Gi <- mean(sample_wage_Gi[sample_wage_Gi > w_star[count]])
sample_wage_Gf <- rlnorm(n = 100000, meanlog = temp_param[3], sdlog = temp_param[4])
wageHwstar_Gf <- mean(sample_wage_Gf[sample_wage_Gf > w_star[count]])
b[count] <- w_star[count] - (temp_param[5]/(rho + temp_param[6]))*(
wageHwstar_Gi - w_star[count]*G_tilde(mu = temp_param[1], sigma = temp_param[2], dataset = dataset) +
wageHwstar_Gf - w_star[count]*G_tilde(mu = temp_param[3], sigma = temp_param[4], dataset = dataset))
# table part
for (t in 1:num_intervaldim){
Table_Coefficient[2*t-1,count] <- sprintf("%.4f",temp_param[t])
if (temp_prb[t]<0.01){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{***}")
}else if (temp_prb[t]<0.05){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{**}")
}else if (temp_prb[t]<0.1){
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")^{*}")
}else{
Table_Coefficient[2*t,count] <- paste0("(",sprintf("%.4f",temp_std[t]),")")
}
}
Table_Coefficient[13,count] <-sprintf("%.4f", b[count])
Table_Coefficient[14,count] <- sprintf("%.4f", w_star[count])
Table_Population[1,count] <- paste0(Nu[count])
Table_Population[3,count] <- Nei[count]
Table_Population[5,count] <- Nef[count]
Table_Population[7,count] <- N[count]
Table_Population[2,count] <- paste0(sprintf("%.2f",Nu[count]/N[count]*100))
Table_Population[4,count] <- paste0(sprintf("%.2f",Nei[count]/N[count]*100))
Table_Population[6,count] <- paste0(sprintf("%.2f",Nef[count]/N[count]*100))
print(xtable(Table_Coefficient, type = "latex"), file = "Table_Coefficient.tex")
print(xtable(Table_Population, type = "latex"), file = "Table_Population.tex")
LLK_maxLik <- LLK_maxLik_colombia
count <- 3
View(LLK_maxLik_colombia)
FOC_Lambda
Table_Optimality <- matrix(0,1,4)
colnames(Table_Optimality) <- name_country
rownames(Table_Optimality) <- c("lambda")
Table_Optimality <- as.table(Table_Optimality)
Table_Optimality[1,] <- FOC_Lambda
print(xtable(Table_Optimality, type = "latex"), file = "Table_Optimality.tex")
Table_Optimality[1,] <- paste0(sprintf("%.4f",FOC_Lambda))
print(xtable(Table_Optimality, type = "latex"), file = "Table_Optimality.tex")
name_country <- c("Chile","Argentina","Colombia","Mexico")
Table_Optimality <- matrix(0,1,4)
colnames(Table_Optimality) <- name_country
rownames(Table_Optimality) <- c("lambda")
Table_Optimality <- as.table(Table_Optimality)
Table_Optimality[1,] <- paste0(sprintf("%.4f",FOC_Lambda))
print(xtable(Table_Optimality, type = "latex"), file = "Table_Optimality.tex")
