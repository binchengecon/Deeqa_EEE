## Load packages
rm(list=ls())
library(tidyverse)
library(stats4)
library(maxLik)
library(alr4)
setwd("C:/Users/alienware/Desktop/Deeqa_EEE/Empirical methods for policy evaluation/Part 2/Takehome 2-20211227")
## Load data
# chile <- read.delim(file = "casen_chile.txt", sep = ",", header = FALSE, col.names = c("unemp_duration","wage","status"))
chile <- read.delim(file = "chile.txt", sep = ",", header = FALSE, col.names = c("unemp_duration","wage","status"))
## define parameters
p <- 0.05
N <- nrow(chile)
N_u <- nrow(chile[chile$status == 1,])
N_f <- nrow(chile[chile$status == 2,])
N_i <- nrow(chile[chile$status == 3,])
# Take the estimate of the reservation wage
w_star <- min(chile$wage[chile$status != 1])
G_tilde <- function(mu, sigma, wage){
return( 1 - plnorm(wage, meanlog = mu, sdlog = sigma, lower.tail = TRUE, log.p = FALSE) )
}
lambda <- function(mu_i,sigma_i,mu_f,sigma_f){
return( ( N_u/(sum(chile$unemp_duration)) )*( 1/(G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) + G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)) ) )
}
eta <- function(lambda,mu_i,sigma_i,mu_f,sigma_f){
return( lambda*( (N/N_i)*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) - G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) ) )
}
eta2 <- function(lambda,mu_i,sigma_i,mu_f,sigma_f){
return( lambda*( (N/N_f)*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) - G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star) ) )
}
LogLikelihood <- function(parameters){
print(parameters)
# Assign parameters
mu_i <- parameters[1]
sigma_i <- parameters[2]
mu_f <- parameters[3]
sigma_f <- parameters[4]
# get values for lambda and eta (concentrated out)
lambda_value <- lambda(mu_i = mu_i, sigma_i = sigma_i, mu_f = mu_f, sigma_f  = sigma_f)
eta_value <- eta(lambda = lambda_value, mu_i = mu_i, sigma_i = sigma_i, mu_f = mu_f, sigma_f = sigma_f)
# Specify LL
LL <- (
-N*log(1 + lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)*(1/eta_value) +
lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)*(1/eta_value)
) +
# contribution of formally employed
sum(log(dlnorm(x = chile$wage[chile$status == 2], meanlog = mu_f, sdlog = sigma_f))) +
# contribution of informally employed
sum(log(dlnorm(x = chile$wage[chile$status == 3], meanlog = mu_i, sdlog = sigma_i))) +
#
N_f*log(lambda_value/eta_value) +
N_i*log(lambda_value/eta_value) +
N_u*log(lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)) -
#
(lambda_value*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda_value*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))*sum(chile$unemp_duration)
)
if(sigma_i > 0 & sigma_f > 0 & lambda_value > 0 & eta_value > 0){
return(ifelse(LL == -Inf, 10^100, -LL))
} else{
return(10^100)
}
}
LogLikelihood2 <- function(parameters){
print(parameters)
# Assign parameters
mu_i <- parameters[1]
sigma_i <- parameters[2]
mu_f <- parameters[3]
sigma_f <- parameters[4]
lambda <- parameters[5]
eta    <- parameters[6]
#
# get values for lambda and eta
N <- N_u+N_i+N_f
# Specify LL
LL <- (
-N*log(1 + lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star)*(1/eta) +
lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star)*(1/eta)
)
#
+  N_f*log(lambda/eta)
+  N_i*log(lambda/eta)
+  N_u*log(lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))
#
- (lambda*G_tilde(mu = mu_f, sigma = sigma_f, wage = w_star) + lambda*G_tilde(mu = mu_i, sigma = sigma_i, wage = w_star))*sum(chile$unemp_duration)
# formally employed
+ sum(log(dlnorm(x = chile$wage[chile$status == 2], meanlog = mu_f, sdlog = sigma_f)))
# informally employed
+ sum(log(dlnorm(x = chile$wage[chile$status == 3], meanlog = mu_i, sdlog = sigma_i)))
)
if(sigma_i > 0 & sigma_f > 0 & lambda > 0 & eta > 0){
return(ifelse(LL == -Inf, 10^100, -LL))
} else{
return(10^100)
}
}
initial_parameters2 <- rep(1.3,6)
optimal_parameters2 <- optim(par = initial_parameters2,
fn = LogLikelihood2,method = "BFGS",
control = list(maxit = 10000, reltol = 1e-12))
Param <- optimal_parameters2$par
Param
LogLikelihood2(parameters = Param)
Param
G_tilde(mu_i,sigma_i,w_star)
mu_i <- Param[1]
sigma_i<-Param[2]
mu_f<-Param[3]
sigma_f<-Param[4]
LogLikelihood2(parameters = Param)
G_tilde(mu_i,sigma_i,w_star)
