library(formattable)
library(tidyr)
library(data.table)
"c:/mydata" + i + ".xlsx"
i=2
"c:/mydata" + i + ".xlsx"
paste("kfd", i,'klkl')
library(tidyverse)
install.packages('tidyverse')
install.packages('bbmle')
install.packages(pracma)
"pracma"
install.packages("pracma")
library(pracma)
rm(list=ls())
library(tidyverse)
library(bbmle)
library(pracma)
setwd('C:/Users/wen_x/Documents/main_documents/All Toulouse Files/TSE_Courses/TSE Deeqa/Policy Evaluation/Policy Evaluation Project 2')
data <- read.csv('casen_chile.txt', header = FALSE)
names(data)<- c('tu', 'wage', 'employ')
data$tu
data$wage
head(data)
min(filter(data, employ!=0))
hist(filter(data, employ!=0))
test = (filter(data, employ!=0))
head(test)
head(test,100)
head(test,1000)
test = (filter(data, employ!=1))
min(filter(data, employ!=1))
head(test,100)
min(filter(data, employ!=1)$wage)
data(1)
data(1,:)
data[1,:]
data(1)
data[1]
data[1,:]
data[1,]
data[2,]
data[2,][2]
typeof(data)
apply(data,mean)
apply(data,FUN=mean)
apply(data,FUN=mean, MARGIN=1)
apply(data,FUN=mean, MARGIN=2)
apply(head(data),FUN=mean, MARGIN=1)
meand(data[1,])
mean(data[1,])
data[1,]
help(apply(array, margin, ...))
help(apply)
typeof(data[1,])
typeof(data[1,][1])
data[1,][1]
data[1,](1)
data[1,][1]
data<- as.matrix(data)
data[1,]
mean(data[1,])
data[1,][1]
data[1,][3]
ln(2)
log(2)
log(2.71)
help("dlnorm")
dlnorm(0.2,meanlog = mu_i,sdlog = sigma_i)
lambda <- 0.2
eta <- 0.1
mu_i <- 0.5
mu_f <- 0.6
sigma_i <- 1.0
sigma_f <- 1.2
dlnorm(0.2,meanlog = mu_i,sdlog = sigma_i)
data$tu
dim(data)
dim(data)[1]
dim(data)[1]-89
setwd('C:/Users/wen_x/Documents/main_documents/All Toulouse Files/TSE_Courses/TSE Deeqa/Policy Evaluation/Policy Evaluation Project 2')
data <- read.csv('casen_chile.txt', header = FALSE)
names(data)<- c('tu', 'wage', 'employ')
reserve_wage <- min(filter(data, employ!=1)$wage)
N <- dim(data)[1]
Nu <- dim(filter(data, employ==1))[1]
Nu
Nu+90
Nu/32
N <- dim(data)[1]
Nu <- dim(filter(data, employ==1))[1]
Ni <- dim(filter(data, employ==2))[1]
Nf <- dim(filter(data, employ==3))[1]
test <- function(i){
print(Ni)
}
test(1)
sum_tu <- sum(data$tu)
sum(apply(data,FUN=singlelike, MARGIN = 1))
singlelike <- function(obs, param){
if (obs[3] == 2){
value <- log(dlnorm(obs[2], meanlog = param[3], sdlog = param[5]))
}else if(obs[3]==3){
value <- log(dlnorm(obs[2], meanlog = param[4], sdlog = param[6]))
}else{
value <- 0
}
return(value)
}
gi <- function(wstar, param){
value <- 1-plnorm(wstar, meanlog = param[3], sdlog = param[5])
return(value)
}
gf <- function(wstar, param){
value <- 1-plnorm(wstar, meanlog = param[4], sdlog = param[6])
return(value)
}
sum(apply(data,FUN=singlelike, MARGIN = 1))
sum(apply(data,FUN=singlelike, MARGIN = 1, param = initalparam))
initalparam <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
sum(apply(data,FUN=singlelike, MARGIN = 1, param = initalparam))
apply(data,FUN=singlelike, MARGIN = 1, param = initalparam)
exp(initalparam)
rm(list=ls())
library(tidyverse)
library(bbmle)
library(pracma)
setwd('C:/Users/wen_x/Documents/main_documents/All Toulouse Files/TSE_Courses/TSE Deeqa/Policy Evaluation/Policy Evaluation Project 2')
data <- read.csv('casen_chile.txt', header = FALSE)
names(data)<- c('tu', 'wage', 'employ')
reserve_wage <- min(filter(data, employ!=1)$wage)
N <- dim(data)[1]
Nu <- dim(filter(data, employ==1))[1]
Ni <- dim(filter(data, employ==2))[1]
Nf <- dim(filter(data, employ==3))[1]
sum_tu <- sum(data$tu)
rho <- 0.05
data <- as.matrix(data)
## Inital parameter guesses
lambda <- 0.2
eta <- 0.1
mu_i <- 0.5
mu_f <- 0.6
sigma_i <- 1.0
sigma_f <- 1.2
initalparam <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
negativeloglike <- function(data, param, wstar){
param <- exp(param)
Gi <- gi(wstar, param)
Gf <- gf(wstar, param)
denom <- -N*log((param[1]*param[2])*(Gi+Gf)+param[2]^2)
num_i_f <- (Ni+Nf)*log(param[1]*param[2])
num_u <- Nu*log(param[2]^2*param[1]*(Gi+Gf))
wage_mle <- sum(apply(data,FUN=singlelike, MARGIN = 1,param = param))
time_mle <- -(param[1])*(Gf+Gi)*sum_tu
return(-(denom+num_i_f+num_u+wage_mle+time_mle))
}
singlelike <- function(obs, param){
if (obs[3] == 2){
value <- log(dlnorm(obs[2], meanlog = param[3], sdlog = param[5]))
}else if(obs[3]==3){
value <- log(dlnorm(obs[2], meanlog = param[4], sdlog = param[6]))
}else{
value <- 0
}
return(value)
}
gi <- function(wstar, param){
value <- 1-plnorm(wstar, meanlog = param[3], sdlog = param[5])
return(value)
}
gf <- function(wstar, param){
value <- 1-plnorm(wstar, meanlog = param[4], sdlog = param[6])
return(value)
}
estimator <- mle2(negativeloglike, start = initalparam, wstar = reserve_wage, parameters = param)
estimator <- mle2(negativeloglike, start = list(initalparam), wstar = reserve_wage, parameters = param)
estimator <- mle2(negativeloglike, data = data, start = list(initalparam), wstar = reserve_wage, parameters = param)
list(param)
list(initialparam)
initalparam <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
list(initialparam)
as.list(initialparam)
initialparam <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
as.list(initialparam)
initialparam
as.list(initialparam)
as.list(initialparam)[[1]]
list(data)
rm(list=ls())
library(tidyverse)
library(bbmle)
library(pracma)
setwd('C:/Users/wen_x/Documents/main_documents/All Toulouse Files/TSE_Courses/TSE Deeqa/Policy Evaluation/Policy Evaluation Project 2')
data <- read.csv('casen_chile.txt', header = FALSE)
names(data)<- c('tu', 'wage', 'employ')
reserve_wage <- min(filter(data, employ!=1)$wage)
N <- dim(data)[1]
Nu <- dim(filter(data, employ==1))[1]
Ni <- dim(filter(data, employ==2))[1]
Nf <- dim(filter(data, employ==3))[1]
sum_tu <- sum(data$tu)
rho <- 0.05
data <- as.matrix(data)
## Inital parameter guesses
lambda <- 0.2
eta <- 0.1
mu_i <- 0.5
mu_f <- 0.6
sigma_i <- 1.0
sigma_f <- 1.2
initialparam <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
negativeloglike <- function(lambda, eta, mu_i, mu_f, sigma_i, sigma_f,data){
param <- c(lambda, eta, mu_i, mu_f, sigma_i, sigma_f)
param <- exp(param)
Gi <- gi(param)
Gf <- gf(param)
denom <- -N*log((param[1]*param[2])*(Gi+Gf)+param[2]^2)
num_i_f <- (Ni+Nf)*log(param[1]*param[2])
num_u <- Nu*log(param[2]^2*param[1]*(Gi+Gf))
wage_mle <- sum(apply(data,FUN=singlelike, MARGIN = 1,param = param))
time_mle <- -(param[1])*(Gf+Gi)*sum_tu
return(-(denom+num_i_f+num_u+wage_mle+time_mle))
}
singlelike <- function(obs, param){
if (obs[3] == 2){
value <- log(dlnorm(obs[2], meanlog = param[3], sdlog = param[5]))
}else if(obs[3]==3){
value <- log(dlnorm(obs[2], meanlog = param[4], sdlog = param[6]))
}else{
value <- 0
}
return(value)
}
gi <- function(param){
value <- 1-plnorm(reserve_wage, meanlog = param[3], sdlog = param[5])
return(value)
}
gf <- function(param){
value <- 1-plnorm(reserve_wage, meanlog = param[4], sdlog = param[6])
return(value)
}
estimator <- mle2(negativeloglike, data = list(data = data), start = list(lambda=0.1, eta=0.1, mu_i=0.1, mu_f=0.1, sigma_i=0.1, sigma_f=0.1))
estimator
summary(estimator)
coef(estimator)
exp(coef(estimator))
exp(coef(estimator))[1]
hist(data(data$employ==1),2)
hist(data(data[3]==1),2)
hist(data(data[,3]==1),2)
data[,3]
data[,3]==1
data(data[,3]==1,2)
data[data[,3]==1,2]
hist(data[data[,3]==1,2])
hist(data[data[,2]==1,2])
hist(data[data[,3]==2\,2])
hist(data[data[,3]==2,2])
par(mfrow = c(2,2))
hist(data[data[,3]==3,2])
hist(rlnorm(sum(data[,3]==3), meanlog = try(4), sdlog=try(6)))
try(4)
try <- exp(coef(estimator))
hist(rlnorm(sum(data[,3]==3), meanlog = try(4), sdlog=try(6)))
try
try(4)
try[4]
hist(rlnorm(sum(data[,3]==3), meanlog = try[4], sdlog=try[6])
)
hist(rlnorm(sum(data[,3]==3), meanlog = 2, sdlog=3))
hist(rlnorm(sum(data[,3]==3), meanlog = 2, sdlog=30))
hist(rlnorm(sum(data[,3]==3), meanlog = 5, sdlog=30))
hist(rlnorm(sum(data[,3]==3), meanlog = 1, sdlog=30))
hist(rlnorm(sum(data[,3]==3), meanlog = 1, sdlog=300))
hist(rlnorm(dim(data[,3]==3), meanlog = 1, sdlog=300))
sum(data[,3]==3)
hist(rlnorm(dim(data[,3]==3), meanlog = 1, sdlog=0.1))
hist(rlnorm(sum(data[,3]==3), meanlog = 1, sdlog=0.1))
hist(data[data[,3]==3,2])
hist(rlnorm(sum(data[,3]==3), meanlog = 0.1, sdlog=0.1))
try
hist(rlnorm(sum(data[,3]==3), meanlog = 0.0001, sdlog=2))
hist(rlnorm(sum(data[,3]==3), meanlog = 0.0005, sdlog=2))
hist(rlnorm(sum(data[,3]==3), meanlog = 0.0001, sdlog=0.2))
hist(data[data[,3]==3,2])
install.packages("fitdistrplus")
library(fitdistrplus)
fitdist(data[data[,3]==3,2], "lnorm")
fitdist(data[data[,3]==2,2], "lnorm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
hist(data[data[,3]==3,2])
hist(rlnorm(sum(data[,3]==3), meanlog = 0.81, sdlog=0.47))
log(c(1.02,0.81,0.407,0.47))
estimator <- mle2(negativeloglike, data = list(data = data), start = list(lambda=0.02, eta=-0.2, mu_i=-0.9, mu_f=-0.7, sigma_i=0.47, sigma_f=0.1))
exp(0.02)
exp(0.01)
exp(-0.01)
exp(-0.31)
exp(-0.81)
estimator <- mle2(negativeloglike, data = list(data = data), start = list(lambda=-0.82, eta=-0.62, mu_i=0.02, mu_f=-0.2, sigma_i=-0.9, sigma_f=-0.75))
summary(estimator)
try <- exp(coef(estimator))
try
details(estimator)
estimator.details
plot(estimator)
plot(profile.estimator)
summary.estimator
profile(estimator)
exp(-1)
exp(-0.1)
exp(-0.01)
exp(-)
exp(0)
exp(-0.05)
seq(-0.05,-1)
seq(0.05,1)
seq(0.05,10)
seq(0.05,10,0.05)
exp(-seq(0.05,1,0.05))
test <- list()
seq(0.55,1,0.1)
exp(-seq(0.55,1,0.1))
exp(-seq(0.5,1.5,0.3))
exp(-seq(0.4,1.6,0.4))
exp(-seq(0.1,2,0.5))
test[[1]][[1]]
test[[1]][[1]]<-1
test[[1]][1]<-1
guesslist <- vector('list', 16)
help("mle2")
new('estimator',details)
summary(estimator)
exp(try)
try
minuslogl(estimator)
new(estimator,minuslogl)
help(dlnorm)
rlnorm(10, meanlog = 1, sdlog = 0.8)
rlnorm(10, meanlog = 1, sdlog = 0.8, lower =0.2)
rlnorm(1000, meanlog = 1, sdlog = 0.8)
rlnorm(10, meanlog = 1, sdlog = 0.8)
rlnorm(10, meanlog = 1, sdlog = 0.8)>1
filter(rlnorm(10, meanlog = 1, sdlog = 0.8))
try
guesslist[[1]][1]<- c(2,1)
guesslist[[1]][1]<- list(2,1)
guesslist[[1]][1]<- 2
guesslist[[1]][2]<- 2
guesslist[[1]]<- list(2,12)
guesslist[[1]]
list(2,12)
deviance
plot(profile(estimator))
summary(estimator)[1]
summary(estimator)
deviance(estimator)
help(deviacne)
help(deviance)
seq(1,4,1)
guesses
guesses <- exp(-seq(0.1,2,0.5))
guesses
log(guesses)
guesses <- exp(-seq(0.1,2,0.5))
# 16 guesses for rates
guesslist <- vector('list', 16)
index <- seq(1,4,1)
for (i in index){
for (j in index){
guesslist[[i+j-1]] <- mle2(negativeloglike, data = list(data = data), start = list(lambda=log(guesses[i]), eta=log(guesses[j]), mu_i=0.02, mu_f=-0.2, sigma_i=-0.9, sigma_f=-0.75))
}
}
warnings()
summary(guesslist[[1]])
summary(guesslist[[2]])
summary(guesslist[[3]])
summary(guesslist[[16]])
summary(guesslist[[15]])
summary(guesslist[[14]])
summary(guesslist[[10]])
summary(guesslist[[5]])
summary(guesslist[[7]])
summary(guesslist[[9]])
summary(guesslist[[8]])
gi_draws <- rlnorm(10000, meanlog = try[3], sdlog = try[5])
gf_draws <- rlnorm(10000, meanlog = try[4], sdlog = try[6])
int_i <- sum(gi_draws[gi_draws>reserve_wage]-reserve_wage)/length(gi_draws[gi_draws>reserve_wage])
int_f <- sum(gf_draws[gf_draws>reserve_wage]-reserve_wage)/length(gf_draws[gf_draws>reserve_wage])
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
b
int_i
int_f
reserve_wage
try[1]
try[2]
b
gi_draws <- rlnorm(10000, meanlog = try[3], sdlog = try[5])
gf_draws <- rlnorm(10000, meanlog = try[4], sdlog = try[6])
int_i <- sum(gi_draws[gi_draws>reserve_wage]-reserve_wage)/length(gi_draws[gi_draws>reserve_wage])
int_f <- sum(gf_draws[gf_draws>reserve_wage]-reserve_wage)/length(gf_draws[gf_draws>reserve_wage])
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
b
help(integrate)
int_i <- integrate(dlnorm,mean= try[3], sd = try[5], reserve_wage,10000)
int_i <- integrate(dlnorm,mean= try[4], sd = try[6], reserve_wage,10000)
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
int_i
int_i <- integrate(dlnorm,mean= try[3], sd = try[5], reserve_wage,10000)
int_f <- integrate(dlnorm,mean= try[4], sd = try[6], reserve_wage,10000)
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
int_f
int_i
int_i <- integrate(dlnorm,meanlog= try[3], sdlog = try[5], reserve_wage,10000)
int_f <- integrate(dlnorm,meanlog= try[4], sdlog = try[6], reserve_wage,10000)
int_i
int_f
try[1]/(rho+try[2])
guesslist[[8]]
guesslist[[7]]
guesslist <- vector('list', 16)
index <- seq(1,4,1)
k <- 1
for (i in index){
for (j in index){
guesslist[[k]] <- mle2(negativeloglike, data = list(data = data), start = list(lambda=log(guesses[i]), eta=log(guesses[j]), mu_i=0.02, mu_f=-0.2, sigma_i=-0.9, sigma_f=-0.75))
k<-k+1
}
}
test<-lapply(guesslist,FUN=coef)
test
gi_draws <- rlnorm(10000, meanlog = try[3], sdlog = try[5])
gf_draws <- rlnorm(10000, meanlog = try[4], sdlog = try[6])
int_i <- sum(gi_draws[gi_draws>reserve_wage]-reserve_wage)/length(gi_draws[gi_draws>reserve_wage])
int_f <- sum(gf_draws[gf_draws>reserve_wage]-reserve_wage)/length(gf_draws[gf_draws>reserve_wage])
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
b
(int_i+int_f)
gi_draws[gi_draws>reserve_wage]-reserve_wage
length(gi_draws[gi_draws>reserve_wage])
gf_draws[gf_draws>reserve_wage]
length(gf_draws[gf_draws>reserve_wage])
length(gi_draws[gi_draws>reserve_wage])
summary(estimates)
summary(estimator)
try
try[3]
mean(gi_draws)
reserve_wage
mean(gi_draws[gi_draws>reserve_wage])
set.seed(1234)
gi_draws <- rlnorm(100000, meanlog = try[3], sdlog = try[5])
gf_draws <- rlnorm(100000, meanlog = try[4], sdlog = try[6])
int_i <- sum(gi_draws[gi_draws>reserve_wage]-reserve_wage)/length(gi_draws[gi_draws>reserve_wage])
int_f <- sum(gf_draws[gf_draws>reserve_wage]-reserve_wage)/length(gf_draws[gf_draws>reserve_wage])
b <- reserve_wage- try[1]/(rho+try[2])*(int_i+int_f)
b
length(gi_draws[gi_draws>reserve_wage])
length(gf_draws[gf_draws>reserve_wage])
try
help(dlnorm)
plnorm(reserve_wage,meanlog = try[3], sdlog=try[5])
plnorm(reserve_wage,meanlog = try[4], sdlog=try[6])
(int_i+int_f)
int_i <- sum(gi_draws[gi_draws>reserve_wage]-reserve_wage)/length(gi_draws[gi_draws>reserve_wage])
int_i
mean(gi_draws)
try[3]
plnorm(reserve_wage,meanlog = try[3], sdlog=try[5])
plnorm(reserve_wage,meanlog = 3, sdlog=try[5])
plnorm(reserve_wage,meanlog = log(1.0245), sdlog=try[5])
plnorm(reserve_wage,meanlog = exp(1.0245), sdlog=try[5])
plnorm(reserve_wage,meanlog = 1.0245, sdlog=try[5])
test<-rlnorm(10000,meanlog=1,sdlog=0.4)
mean(test)
log(1)
exp(1)
test<-rlnorm(10000000,meanlog=1,sdlog=0.4)
mean(test)
log(2.944)
exp(try)
int_i
int_f
b
help("optim")
guesses
summary(estimator)
sd(gi_draws)
try[5]
cov(estimator)
covar(estimator)
help(mle2)
vcov(estimator)
sqrt(vcov(estimator))
sqrt.(vcov(estimator))
diag(exp(vcov(estimator))-1)
diag(vcov(estimator))
(exp(diag(vcov(estimator)))-1)*exp(2*coef(estimator)+diag(vcov(estimator)))
sqrt((exp(diag(vcov(estimator)))-1)*exp(2*coef(estimator)+diag(vcov(estimator))))
sqrt((exp(diag(vcov(estimator)))-1)*exp(2*coef(estimator)+diag(vcov(estimator))))
coef(estimator)
b
reserve_wage <- mean(filter(data, employ!=1)$wage)
setwd('C:/Users/wen_x/Documents/main_documents/All Toulouse Files/TSE_Courses/TSE Deeqa/Policy Evaluation/Policy Evaluation Project 2')
data <- read.csv('casen_chile.txt', header = FALSE)
names(data)<- c('tu', 'wage', 'employ')
mean(filter(data, employ!=1)$wage)
max(filter(data, employ!=1)$wage)
exp(-seq(0.1,2,0.5))
exp(-seq(0.1,2,0.25))
